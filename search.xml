<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[CSS3图片动态提示效果]]></title>
      <url>%2F2017%2F03%2F13%2FCSS3%E5%9B%BE%E7%89%87%E5%8A%A8%E6%80%81%E6%8F%90%E7%A4%BA%E6%95%88%E6%9E%9C%2F</url>
      <content type="text"><![CDATA[CSS3动画相比于JavaScript动画来说更简洁，代码量更少，但是兼容性方面来说，IE9以下不支持，所以说如果是不考虑IE9以下的用户可以尝试下CSS3的动画 在这里我们介绍下CSS3的新标签transform、transition，用这两个属性构造图片动态提示的效果 transform属性transform是CSS3属性，主要用于元素的变形处理。属性值有： translate 用于元素的平移 rotate 用于元素的旋转 skew 用于元素的斜切 scale 用于元素的缩放 transition属性transition也是CSS3属性，它是一个简写属性，用于设置四个过渡属性： transition-property 规定设置过渡效果的CSS属性名称 transition-duration 规定完成过渡效果的时间 transition-timing-function 规定过渡效果的速度曲线值有linear、ease、ease-in、ease-out、ease-in-out、cubic-bezier(n,n,n,n) transition-delay 设置过渡效果的延迟时间 图片动态提示效果程序演示 平移效果 HTML部分123456789&lt;figure class="test1"&gt; &lt;img src="./images/1.jpg"&gt; &lt;figcaption&gt; &lt;h2&gt;平移动画&lt;/h2&gt; &lt;p&gt;平移动画注释1&lt;/p&gt; &lt;p&gt;平移动画注释2&lt;/p&gt; &lt;p&gt;平移动画注释3&lt;/p&gt; &lt;/figcaption&gt;&lt;/figure&gt; CSS部分123456789101112body,figure,figcaption,h2,p,img &#123;padding: 0;margin: 0;&#125;figure &#123;position: relative;width: 100%;height:350px;overflow: hidden;float: left;&#125;figure img &#123;opacity: 0.8;transition:all 0.35s;-webkit-transition:all 0.35s;&#125;figure figcaption &#123;position: absolute;left: 0;top: 0;color: #fff;font-family: "微软雅黑"&#125;figure figcaption p,div,h2&#123;transition:all 0.35s;-webkit-transition:all 0.35s&#125;.test1 &#123;background: #2F0000;&#125;.test1 figcaption&#123;top: 20px;left: 20px;&#125;.test1 figcaption p &#123;background: #fff;color: #333;text-align: center;margin: 5px;transform: translate(-140px,0);-webkit-transform: translate(-140px,0);&#125;.test1 figcaption p:nth-of-type(1)&#123;transition-delay:0.05s;-webkit-transition-delay:0.05s;&#125;.test1 figcaption p:nth-of-type(2)&#123;transition-delay:0.1s;-webkit-transition-delay:0.1s;&#125;.test1 figcaption p:nth-of-type(3)&#123;transition-delay:0.15s;-webkit-transition-delay:0.15s;&#125;.test1:hover figcaption p&#123;transform:translate(0,0);-webkit-transform:translate(0,0);&#125; 旋转效果HTML部分12345678&lt;figure class="test2"&gt; &lt;img src="./images/2.jpg"&gt; &lt;figcaption&gt; &lt;h2&gt;旋转动画&lt;/h2&gt; &lt;p&gt;旋转动画图片注释&lt;/p&gt; &lt;div&gt;&lt;/div&gt; &lt;/figcaption&gt;&lt;/figure&gt; CSS部分12345678.test2&#123;background: #030;&#125;.test2 figcaption&#123;width: 100%;height: 100%;&#125;.test2 figcaption h2&#123;margin-top: 15%;margin-left: 15%;&#125;.test2 figcaption p&#123;margin-left:15%;&#125;.test2 figcaption div &#123;border: 2px solid #fff;width: 80%;height: 80%;position: absolute;left: 10%;top: 10%;transform:translate(0,-350px);-webkit-transform:translate(0,-350px)&#125;.test2 figcaption p&#123;transform:translate(0px,50px);-webkit-transform:translate(0px,50px);opacity: 0;&#125;.test2:hover figcaption div&#123;transform:translate(0,0) rotate(180deg);-webkit-transform:translate(0,0) rotate(180deg);&#125;.test2:hover figcaption p&#123;transform:translate(0,0);-webkit-transform:translate(0,0);opacity: 1;&#125; 斜切效果HTML部分1234567&lt;figure class="test3"&gt; &lt;img src="./images/3.jpg"&gt; &lt;figcaption&gt; &lt;h2&gt;斜切动画&lt;/h2&gt; &lt;p&gt;斜切动画图片注解&lt;/p&gt; &lt;/figcaption&gt;&lt;/figure&gt; CSS部分123456.test3 figcaption &#123;top:30%;left:15%;&#125;.test3 figcaption h2&#123;transform:skew(90deg);-webkit-transform:skew(90deg);&#125;.test3 figcaption p&#123;transform:skew(90deg);-webkit-transform:skew(90deg);transition-delay:0.1s;-webkit-transition-delay:0.1s;&#125;.test3:hover figcaption h2&#123;transform:skew(0deg);-webkit-transform:skew(0deg);&#125;.test3:hover figcaption p&#123;transform:skew(0deg);-webkit-transform:skew(0deg);&#125;.test3:hover img&#123;opacity:0.5;transform:translate(-50px,0);-webkit-transform:translate(-50px,0)&#125; 缩放效果HTML部分12345678&lt;figure class="test4"&gt; &lt;img src="./images/2.jpg"&gt; &lt;figcaption&gt; &lt;h2&gt;缩放动画&lt;/h2&gt; &lt;p&gt;缩放动画图片注释&lt;/p&gt; &lt;div&gt;&lt;/div&gt; &lt;/figcaption&gt;&lt;/figure&gt; CSS部分12345678910.test4&#123;background: #2F0000;&#125;.test4 figcaption&#123;width: 100%;height: 100%;&#125;.test4 img&#123;transform:scale(1,1);-wbkit-transform:scale(1,1);&#125;.test4 figcaption div&#123;width: 80%;height: 80%;position: absolute;left: 10%;top: 10%;border: 2px solid #fff;transform:scale(1.2,1.2);-webkit-transform:scale(1.2,1.2);opacity: 0;&#125;.test4 figcaption h2&#123;margin-left: 15%;margin-top: 15%;transform:scale(1.2,1.2);-webkit-transform:scale(1.2,1.2);opacity: 0;&#125;.test4 figcaption p&#123;margin-left: 15%;margin-top: 5px;transform:scale(1.2,1.2);-webkit-transform:scale(1.2,1.2);opacity: 0;&#125;.test4:hover figcaption h2&#123;transform:scale(1,1);-webkit-transform:scale(1,1);opacity: 1;&#125;.test4:hover figcaption p&#123;transform:scale(1,1);-webkit-transform:scale(1,1);opacity: 1;&#125;.test4:hover figcaption div&#123;transform:scale(1,1);-webkit-transform:scale(1,1);opacity: 1;&#125;.test4:hover img &#123;transform:scale(1.2,1.2);-webkit-transform:scale(1.2,1.2);&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[分页效果]]></title>
      <url>%2F2017%2F02%2F14%2F%E5%88%86%E9%A1%B5%E6%95%88%E6%9E%9C%2F</url>
      <content type="text"><![CDATA[实现的效果是：有固定个数的分页码数，在点击上一页和下一页的时候也保持固定个数程序演示 实现步骤HTML部分1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;分页&lt;/title&gt; &lt;link rel="stylesheet" type="text/css" href="style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="container"&gt; &lt;div class="page-content"&gt; ... &lt;/div&gt; &lt;div class="page-content"&gt; ... &lt;/div&gt; &lt;div class="page-content"&gt; ... &lt;/div&gt; &lt;div class="page-content"&gt; ... &lt;/div&gt; &lt;div class="page-content"&gt; ... &lt;/div&gt; &lt;div class="pagination"&gt; &lt;span class="prev"&gt;&amp;laquo;&lt;/span&gt; &lt;a href="javascript:void(0)" class="active"&gt;1&lt;/a&gt; &lt;a href="javascript:void(0)"&gt;2&lt;/a&gt; &lt;a href="javascript:void(0)"&gt;3&lt;/a&gt; &lt;a href="javascript:void(0)"&gt;4&lt;/a&gt; &lt;span class="next"&gt;&amp;raquo;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;script type="text/javascript" src="jquery.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; CSS部分1234567891011121314151617181920212223242526272829303132body,a &#123; margin: 0; padding: 0&#125;.container &#123; margin: 100px;&#125;.pagination a &#123; text-decoration: none; color: #333; padding: 5px 15px; border: 1px solid #ccc; border-radius: 4px; display: inline-block;&#125;.pagination span &#123; padding: 5px 15px; border: 1px solid #ccc; border-radius: 4px; cursor: pointer;&#125;.pagination a:hover &#123; background: #eee;&#125;.pagination a.active &#123; background: #ed7500; color: #eee; border-radius: 4px;&#125;.page-content &#123; display: none;&#125; jQuery部分1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950$(function() &#123; // 初始化 $('.page-content').eq($('.active').index('.pagination a')).css('display', 'block'); var acindex=$('.active').index('.pagination a'); var length = $('.pagination a').length; $('.pagination').on('click', 'a', function() &#123; $('.page-content').css('display','none'); $('.page-content').eq($(this).index()-1).css('display','block'); $('.pagination a').removeClass('active'); $('.pagination a').eq($(this).index()-1).addClass('active'); acindex = $('.active').index('.pagination a'); &#125;); // 上一页 $('.prev').on('click', function() &#123; if(acindex &gt; 0) &#123; if(acindex &lt;= $('.pagination a').length - length) &#123; //当active来到最左边时，判断当前的索引是否不为0 $('.pagination a').eq(acindex+(length-1)).css('display','none'); $('.pagination a').eq(acindex-1).css('display','inline-block'); &#125; $('.page-content').css('display','none'); $('.page-content').eq(acindex-1).css('display','block'); $('.pagination a').removeClass('active'); $('.pagination a').eq(acindex-1).addClass('active'); acindex = $('.active').index('.pagination a'); &#125; &#125;); // 下一页 // 动态生成分页标签 if (length &lt; $('.page-content').length) &#123; for(var i = 0; i &lt; $('.page-content').length-length; i++) &#123; var anode = $('&lt;a href="javascript:void(0)" style="margin-right:5px;display:none;"&gt;'+ (length+i+1) +'&lt;/a&gt;'); $('.next').before(anode); &#125; &#125; $('.next').on('click', function() &#123; if (acindex &lt; $('.pagination a').length - 1) &#123; $('.page-content').css('display','none'); $('.page-content').eq(acindex+1).css('display','block'); $('.pagination a').removeClass('active'); $('.pagination a').eq(acindex+1).addClass('active'); acindex = $('.active').index('.pagination a'); if(acindex &gt;= length) &#123; $('.pagination a').eq(acindex-length).css('display','none'); $('.pagination a').eq(acindex).css('display','inline-block'); &#125; &#125; &#125;);&#125;); Bug没有用ajax读取数据的形式动态添加内容]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基于Bootstrap搭建的响应式网页]]></title>
      <url>%2F2017%2F02%2F13%2F%E5%9F%BA%E4%BA%8EBootstrap%E6%90%AD%E5%BB%BA%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%2F</url>
      <content type="text"><![CDATA[Bootstrap，是目前很受欢迎的前端框架。Bootstrap是基于HTML、CSS、JAVASCRIPT的，它简洁灵活，使得 Web开发更加快捷，是一个CSS/HTML框架。 Bootstrap中包含了很多组件和js插件，利用这些组件和插件下面我们搭建一个简单的响应式网页。 程序演示 下载Bootstrap大家可以到Bootstrap中文网上下载，官网上还提供了文档供大家学习查阅 注意事项css文件在&lt;head&gt;&lt;/head&gt;标签里引用，js文件在&lt;/body&gt;之前引用另外bootstrap是依赖于jQuery的，所以在引用js文件前要先引用jquery文件1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel="stylesheet" type="text/css" href="bootstrap-3.3.7/css/bootstrap.min.css"&gt; &lt;link rel="stylesheet" type="text/css" href="css/style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/javascript" src="bootstrap-3.3.7/jquery.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="bootstrap-3.3.7/js/bootstrap.min.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[tab选项卡的制作]]></title>
      <url>%2F2017%2F02%2F13%2Ftab%E9%80%89%E9%A1%B9%E5%8D%A1%E7%9A%84%E5%88%B6%E4%BD%9C%2F</url>
      <content type="text"><![CDATA[Tab选项卡实现的效果如下:程序演示 实现步骤HTML部分1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Tab选项卡切换&lt;/title&gt; &lt;link rel="stylesheet" type="text/css" href="css/style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="container"&gt; &lt;ul class="tab"&gt; &lt;li class="active"&gt;&lt;a href="#html5"&gt;HTML5&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#css3"&gt;CSS3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div id="html5" class="tab-content"&gt; &lt;h3&gt;HTML5&lt;/h3&gt; &lt;p&gt;...&lt;/p&gt; &lt;/div&gt; &lt;div id="css3" class="tab-content"&gt; &lt;h3&gt;CSS3&lt;/h3&gt; &lt;p&gt;...&lt;/p&gt; &lt;/div&gt; &lt;div id="bootstrap" class="tab-content"&gt; &lt;h3&gt;Bootstrap&lt;/h3&gt; &lt;p&gt;...&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;script type="text/javascript" src="js/jquery.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="js/script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; CSS部分1234567891011121314151617181920212223242526272829303132333435363738394041424344body &#123; margin: 0; padding: 0;&#125;ul,li &#123; padding: 0; margin: 0;&#125;.container &#123; margin: 100px; width: 500px;&#125;.tab &#123; list-style: none; zoom: 1;&#125;.tab:after &#123; display: block; clear: both; content: ''; height: 0; visibility: hidden;&#125;.tab li &#123; float: left; border-bottom: 1px solid #ccc;&#125;.tab li.active &#123; border-bottom: none; border-top: 1px solid #ccc; border-left: 1px solid #ccc; border-right: 1px solid #ccc;&#125;.tab li a &#123; display: inline-block; text-decoration: none; color: #333; padding: 20px;&#125;.tab-content &#123; line-height: 1.6; margin: 20px; display: none;&#125; 清除浮动在给ul下的li设置浮动后，后面的元素就会受到影响，这里给出三种清除浮动的方法1、给父元素设置overflow：hidden2、父元素定义伪类:after和zoom,此处就是用的这种方法3、给受到浮动影响的元素设置clear:both; JS部分1234567891011121314$(function() &#123; // 初始化，让类.active显示 $('.tab-content').eq($('.active').index('.tab li')).css('display','block'); $('.tab li').on('click', function() &#123; // 先将所有内容都隐藏 $('.tab-content').css('display','none'); // 再讲切换的内容显示 $('.tab-content').eq($(this).index()).css('display','block'); // 修改CSS样式 $('.tab li').removeClass('active'); $(this).addClass('active'); &#125;);&#125;);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Markdown语法]]></title>
      <url>%2F2017%2F01%2F10%2FMarkdown%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[Markdown是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者， 撰稿者广泛使用。Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有 很多人用它写博客，像我现在使用的hexo就是用markdown来写的。 Markdown官方文档Markdown中文版语法，大家可以去看一下官方文档，下面我把自己记录的笔记整理一下。 Markdown语法规则标题标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。 # 一级标题## 二级标题### 三级标题 以此类推，一共有六级标题 列表列表分为有序列表和无序列表，有序列表在文字前面加1. 2. 3.即可 1 2 3 无序列表即在文字前加*或是-即可 1 2 3 引用在要引用的文字前加&gt;就行 例如这样 图片与链接插入链接与插入图片的语法很像，区别在一个!号 插入图片： ![Alt text](/path/to/img.jpg)，其中方括号里面放的是图片的替代文字，圆括号里放的是图片的地址，可以是相对地址也可以是绝对地址。例如![my blog logo](/images/avatar.jpg) 插入链接： [text](url)例如：[baidu](www.baidu.com)，baidu 粗体与斜体粗体与斜体语法也很简单，用两个*包含文字就是粗体，用一个*包含文字就是斜体例如： 这里是粗体，这里是斜体 表格12345| text-align | text-align | text-align || -----------|:----------:| ----------:|| left | center | right || left | center | right || left | center | right | 出来的效果是这样的： text-align text-align text-align left center right left center right left center right 代码框在代码两端加上三个```12345678910&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;hello world&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;hello world!&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 分隔线分隔线只要另起一行，连续输入三个***即可 反斜杠Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号。Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：123456789101112\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F28%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
